{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\username\\\\Desktop\\\\\\u65B0\\u5EFA\\u6587\\u4EF6\\u5939\\\\a\\\\src\\\\pages\\\\discover\\\\c-pages\\\\recommend\\\\c-cpns\\\\topbanner\\\\topbanner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { BannerWrapper, BannerControl, BannerLeft, BannerRight } from \"./style\";\nimport { getTopBannerAction } from \"../../store/actionCreatorgs\";\nimport { Carousel } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function Topbanner() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const bannerRef = useRef();\n  let {\n    topBanners\n  } = useSelector(state => {\n    return {\n      topBanners: state.getIn([\"recommend\", \"topBanners\"])\n    };\n  }, shallowEqual);\n  useEffect(() => {\n    dispatch(getTopBannerAction());\n  }, [dispatch]);\n  const bannerChange = useCallback((from, to) => {\n    setCurrentIndex(to);\n  }, []);\n  const bgImage = topBanners[currentIndex] && topBanners[currentIndex].imageUrl + '?imageView&blur=40x20';\n  return /*#__PURE__*/_jsxDEV(BannerWrapper, {\n    bgImage: bgImage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner wrap-v2\",\n      children: [/*#__PURE__*/_jsxDEV(BannerLeft, {\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          effect: \"fade\",\n          beforeChange: bannerChange,\n          autoplay: true,\n          ref: bannerRef,\n          children: topBanners.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"banner-item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: item.imageUrl,\n                alt: item.typeTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BannerRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BannerControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn left\",\n          onClick: e => bannerRef.current.prev()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn right\",\n          onClick: e => bannerRef.current.next()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}, \"txy4BUJDWLlftQB7xK4pMVskJQA=\", false, function () {\n  return [useDispatch, useSelector];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/username/Desktop/新建文件夹/a/src/pages/discover/c-pages/recommend/c-cpns/topbanner/topbanner.jsx"],"names":["React","memo","useEffect","useRef","useState","useCallback","useDispatch","useSelector","shallowEqual","BannerWrapper","BannerControl","BannerLeft","BannerRight","getTopBannerAction","Carousel","Topbanner","dispatch","currentIndex","setCurrentIndex","bannerRef","topBanners","state","getIn","bannerChange","from","to","bgImage","imageUrl","map","item","index","typeTitle","e","current","prev","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,EAAkDC,WAAlD,QAAqE,OAArE;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,UAAvC,EAAmDC,WAAnD,QAAsE,SAAtE;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,QAAT,QAAyB,MAAzB;;AACA,kCAAeb,IAAI,SAAC,SAASc,SAAT,GAAqB;AAAA;;AACvC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,YAAD,EAAcC,eAAd,IAAiCd,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAMe,SAAS,GAAGhB,MAAM,EAAxB;AACA,MAAI;AAAEiB,IAAAA;AAAF,MAAiBb,WAAW,CAAEc,KAAD,IAAW;AAC1C,WAAO;AACLD,MAAAA,UAAU,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,WAAD,EAAc,YAAd,CAAZ;AADP,KAAP;AAGD,GAJ+B,EAI7Bd,YAJ6B,CAAhC;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,QAAMO,YAAY,GAAGlB,WAAW,CAAC,CAACmB,IAAD,EAAMC,EAAN,KAAa;AAC5CP,IAAAA,eAAe,CAACO,EAAD,CAAf;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,OAAO,GAAGN,UAAU,CAACH,YAAD,CAAV,IAA2BG,UAAU,CAACH,YAAD,CAAV,CAAyBU,QAAzB,GAAkC,uBAA7E;AACA,sBACE,QAAC,aAAD;AAAe,IAAA,OAAO,EAAED,OAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAC,MAAjB;AAAwB,UAAA,YAAY,EAAEH,YAAtC;AAAoD,UAAA,QAAQ,MAA5D;AAA6D,UAAA,GAAG,EAAEJ,SAAlE;AAAA,oBACGC,UAAU,CAACQ,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,gCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,OADZ;AAEE,gBAAA,GAAG,EAAED,IAAI,CAACF,QAFZ;AAGE,gBAAA,GAAG,EAAEE,IAAI,CAACE;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF,eAAkCD,KAAlC;AAAA;AAAA;AAAA;AAAA,oBADF;AASD,WAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,aAAD;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,OAAO,EAAGE,CAAD,IAAOb,SAAS,CAACc,OAAV,CAAkBC,IAAlB;AAFlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,OAAO,EAAGF,CAAD,IAAOb,SAAS,CAACc,OAAV,CAAkBE,IAAlB;AAFlB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAjDkB;AAAA,UACA7B,WADA,EAIIC,WAJJ;AAAA,GAAnB","sourcesContent":["import React, { memo, useEffect, useRef, useState,useCallback } from \"react\";\r\n\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\n\r\nimport { BannerWrapper, BannerControl, BannerLeft, BannerRight } from \"./style\";\r\nimport { getTopBannerAction } from \"../../store/actionCreatorgs\";\r\nimport { Carousel } from \"antd\";\r\nexport default memo(function Topbanner() {\r\n  const dispatch = useDispatch();\r\n  const [currentIndex,setCurrentIndex] = useState(0)\r\n  const bannerRef = useRef();\r\n  let { topBanners } = useSelector((state) => {\r\n    return {\r\n      topBanners: state.getIn([\"recommend\", \"topBanners\"]),\r\n    };\r\n  }, shallowEqual);\r\n  useEffect(() => {\r\n    dispatch(getTopBannerAction());\r\n  }, [dispatch]);\r\n\r\n  const bannerChange = useCallback((from,to) => {\r\n    setCurrentIndex(to)\r\n  }, []);\r\n  const bgImage = topBanners[currentIndex]&&(topBanners[currentIndex].imageUrl+'?imageView&blur=40x20')\r\n  return (\r\n    <BannerWrapper bgImage={bgImage}>\r\n      <div className=\"banner wrap-v2\">\r\n        <BannerLeft>\r\n          <Carousel effect=\"fade\" beforeChange={bannerChange} autoplay ref={bannerRef}>\r\n            {topBanners.map((item, index) => {\r\n              return (\r\n                <div className=\"banner-item\" key={index}>\r\n                  <img\r\n                    className=\"image\"\r\n                    src={item.imageUrl}\r\n                    alt={item.typeTitle}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </BannerLeft>\r\n        <BannerRight />\r\n        <BannerControl>\r\n          <button\r\n            className=\"btn left\"\r\n            onClick={(e) => bannerRef.current.prev()}\r\n          ></button>\r\n          <button\r\n            className=\"btn right\"\r\n            onClick={(e) => bannerRef.current.next()}\r\n          ></button>\r\n        </BannerControl>\r\n      </div>\r\n    </BannerWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}